## Autogenerated by Scribe. DO NOT MODIFY.

name: Korisnici
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: Korisnici
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Dohvati sve korisnike

        Vraća popis svih korisnika u sustavu.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "id": 1,
              "fname": "Ana",
              "lname": "Anić",
              "email": "ana@example.com"
            }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      groupName: Korisnici
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Dodaj novog korisnika

        Sprema novog korisnika u bazu.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      fname:
        name: fname
        description: 'Ime korisnika.'
        required: true
        example: Ana
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      lname:
        name: lname
        description: 'Prezime korisnika.'
        required: true
        example: Anić
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'Email adresa korisnika.'
        required: true
        example: ana@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'Lozinka korisnika.'
        required: true
        example: tajna123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      lic_num:
        name: lic_num
        description: 'Broj vozačke dozvole (opcionalno).'
        required: false
        example: HR123456
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      phone_num:
        name: phone_num
        description: 'Broj telefona (opcionalno).'
        required: false
        example: '0912345678'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      gender:
        name: gender
        description: 'Spol korisnika (opcionalno).'
        required: false
        example: Žensko
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      fname: Ana
      lname: Anić
      email: ana@example.com
      password: tajna123
      lic_num: HR123456
      phone_num: '0912345678'
      gender: Žensko
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "message": "User created successfully",
            "user": {
              "id": 2,
              "fname": "Ana",
              "lname": "Anić",
              "email": "ana@example.com"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      groupName: Korisnici
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Prikaz pojedinog korisnika

        Dohvaća korisnika prema ID-u.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID korisnika.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "fname": "Ana",
            "lname": "Anić",
            "email": "ana@example.com"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "User not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/users/{id}'
    metadata:
      groupName: Korisnici
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Ažuriraj korisnika

        Ažurira korisnika prema ID-u.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID korisnika.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      fname:
        name: fname
        description: 'Ime korisnika.'
        required: true
        example: Ana
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      lname:
        name: lname
        description: 'Prezime korisnika.'
        required: true
        example: Anić
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'Email korisnika.'
        required: true
        example: ana@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'Lozinka korisnika (opcionalno).'
        required: false
        example: novaLozinka123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      lic_num:
        name: lic_num
        description: 'Broj vozačke (opcionalno).'
        required: false
        example: HR123456
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      phone_num:
        name: phone_num
        description: 'Broj telefona (opcionalno).'
        required: false
        example: '0912345678'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      gender:
        name: gender
        description: 'Spol korisnika (opcionalno).'
        required: false
        example: Žensko
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      fname: Ana
      lname: Anić
      email: ana@example.com
      password: novaLozinka123
      lic_num: HR123456
      phone_num: '0912345678'
      gender: Žensko
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "User updated successfully",
            "user": {
              "id": 1,
              "fname": "Ana",
              "lname": "Anić",
              "email": "ana@example.com"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{id}'
    metadata:
      groupName: Korisnici
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Obriši korisnika

        Briše korisnika prema ID-u.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID korisnika.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "User deleted successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "User not found",
            "id_received": 99
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
